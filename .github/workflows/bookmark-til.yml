name: Create TIL/Bookmark from Issue

on:
  issues:
    types: [opened]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    if: github.actor == github.repository_owner
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create TIL markdown file from issue
        uses: actions/github-script@v7
        id: create-til
        with:
          retries: 3
          script: |
            	const fs = require("node:fs");
				const path = require("node:path");

				const issue = await github.rest.issues.get({
					issue_number: context.issue.number,
					owner: context.repo.owner,
					repo: context.repo.repo,
				});
				if (!issue) {
					core.setFailed("Could not get issue details from github.event");
					return;
				}

				const date = new Date().toISOString().split("T")[0];
				const title = issue.title;
				const body = issue.body || "";
				const type = issue.labels?.find((label) => label.name.startsWith("type:"))?.name.split(":")[1] || "";

				if (body.length === 0) {
					core.setFailed("Issue body is empty");
					return;
				}

				if (type.length === 0) {
					core.setFailed("Issue labels do not contain a type");
					return;
				}

				const [content, links] = body.split("---").map((part) => part.trim());
				const linksArray = links.split("\n").map((link) => link.trim());
				const markdown = `---
				title: ${title}
				date: ${date}
				type: ${type}
				${linksArray.length > 0 ? `links:
				${linksArray.map((link) => `    - url: ${link}`).join("\n")}` : ""}
				---

				${content}`;

				const snakeCasedTitle = title.toLowerCase().replace(/ /g, "-");
				const filePath = path.join(
					${{ github.workspace }},
					"src",
					"content",
					"bookmarks",
					`${snakeCasedTitle}.mdx`,
				);
				fs.writeFileSync(filePath, markdown);

				console.log(`Successfully created TIL file: ${filePath}`);

      - name: Commit and push TIL file
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add ./src/content/bookmarks/*.mdx
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "bookmark/til: add content from #${{ github.event.issue.number }} [automated]"
            echo "Commit created."
          fi

      - name: Push changes to repository
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref_name }}

      - name: Close Issue
        if: success()
        run: gh issue close --comment "Bookmark/TIL created and pushed. Auto-closing issue." "${{ github.event.issue.number }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
